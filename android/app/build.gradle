plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.gun.cameracalculator.camera_calculator"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "theme", "functionality"
    productFlavors {
        red {
            dimension "theme"
            applicationIdSuffix ".red"
            resValue "bool", "USE_ENCRYPTED_STORAGE", "false"
        }
        green {
            dimension "theme"
            applicationIdSuffix ".green"
            resValue "bool", "USE_ENCRYPTED_STORAGE", "true"
        }
        camera_roll {
            dimension "functionality"
            applicationIdSuffix ".camera_roll"
            resValue "bool", "USE_CAMERA_ROLL", "true"
            resValue "bool", "USE_BUILT_IN_CAMERA", "false"
        }
        built_in_camera {
            dimension "functionality"
            applicationIdSuffix ".built_in_camera"
            resValue "bool", "USE_CAMERA_ROLL", "false"
            resValue "bool", "USE_BUILT_IN_CAMERA", "true"
        }
    }
}


flutter {
    source = "../.."
}
